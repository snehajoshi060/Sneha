---

# ---------------- DEBIAN FAMILY ----------------
- name: Cleanup any existing config files (Debian)
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - /etc/elasticsearch/elasticsearch.keystore
    - /usr/share/elasticsearch/config/certs
    - /usr/share/elasticsearch/config/elasticsearch.keystore
  when: ansible_os_family == "Debian"

- name: Update apt repo and cache
  apt:
    update_cache: yes
    force_apt_get: yes
    cache_valid_time: 3600
  when: ansible_os_family == "Debian"

- name: Upgrade all packages
  apt:
    upgrade: dist
    force_apt_get: yes
  when: ansible_os_family == "Debian"

- name: Install packages (Debian)
  apt:
    name:
      - openjdk-17-jdk
      - nginx
      - wget
      - vim
    state: present
  when: ansible_os_family == "Debian"

- name: Add Elasticsearch GPG key (Debian)
  apt_key:
    url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
    keyring: /usr/share/keyrings/elasticsearch-keyring.gpg
    state: present
  when: ansible_os_family == "Debian"

- name: Add Elasticsearch repo (Debian)
  lineinfile:
    path: /etc/apt/sources.list.d/elastic-8.x.list
    line: "deb [signed-by=/usr/share/keyrings/elasticsearch-keyring.gpg] https://artifacts.elastic.co/packages/8.x/apt stable main"
    create: yes
  when: ansible_os_family == "Debian"

- name: Install Elasticsearch (Debian)
  apt:
    name: elasticsearch
    state: present
    update_cache: yes
  when: ansible_os_family == "Debian"
  notify: 
    - Enable Elasticsearch
    - Restart Elasticsearch

# ---------------- AMAZON LINUX ----------------
- name: Cleanup Elasticsearch configs (Amazon)
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - /etc/elasticsearch/elasticsearch.keystore
    - /usr/share/elasticsearch/config/certs
    - /usr/share/elasticsearch/config/elasticsearch.keystore
  when: ansible_distribution == "Amazon"

- name: Install dependencies (Amazon)
  yum:
    name:
      - java-17-amazon-corretto
      - nginx
      - wget
      - vim
    state: present
  when: ansible_distribution == "Amazon"

- name: Import GPG key (Amazon)
  rpm_key:
    key: https://artifacts.elastic.co/GPG-KEY-elasticsearch
    state: present
  when: ansible_distribution == "Amazon"

- name: Add Elasticsearch repo (Amazon)
  copy:
    dest: /etc/yum.repos.d/elasticsearch.repo
    content: |
      [elasticsearch]
      name=Elasticsearch repository
      baseurl=https://artifacts.elastic.co/packages/8.x/yum
      gpgcheck=1
      gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
      enabled=1
  when: ansible_distribution == "Amazon"

- name: Install Elasticsearch (Amazon)
  yum:
    name: elasticsearch
    state: present
  when: ansible_distribution == "Amazon"
  notify: 
    - Enable Elasticsearch
    - Restart Elasticsearch

# ---------------- COMMON CONFIG ----------------
- name: Configure elasticsearch.yml
  block:
    - name: Set network.host
      lineinfile:
        path: /etc/elasticsearch/elasticsearch.yml
        regexp: '^#?network.host:'
        line: 'network.host: 0.0.0.0'

    - name: Set http.port
      lineinfile:
        path: /etc/elasticsearch/elasticsearch.yml
        regexp: '^#?http.port:'
        line: 'http.port: 9200'

    - name: Disable security
      lineinfile:
        path: /etc/elasticsearch/elasticsearch.yml
        line: '{{ item }}'
        create: yes
      loop:
        - 'xpack.security.enabled: false'
        - 'xpack.security.transport.ssl.enabled: false'
        - 'xpack.security.http.ssl.enabled: false'
  when: ansible_os_family in ["Debian", "RedHat"] or ansible_distribution == "Amazon"

- name: Set JVM heap size to 512m
  lineinfile:
    path: /etc/elasticsearch/jvm.options
    regexp: '^-Xms'
    line: '-Xms512m'
  notify: Restart Elasticsearch

- name: Set JVM max heap size to 512m
  lineinfile:
    path: /etc/elasticsearch/jvm.options
    regexp: '^-Xmx'
    line: '-Xmx512m'
  notify: Restart Elasticsearch

- name: Reload systemd
  command: systemctl daemon-reexec
  become: yes

- name: Force systemd reload
  systemd:
    daemon_reload: yes
